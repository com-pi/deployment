--- #Nginx
apiVersion: apps/v1
kind: Deployment

metadata:
  name: nginx-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-pod

  template:
    metadata:
      labels:
        app: nginx-pod

    spec:
      initContainers:
        - name: init-wait-for-services
          image: busybox
          command:
            - sh
            - -c
            - |
              while ! nc -z auth-service 8080; do
                echo "Waiting for auth-service..."
                sleep 5
              done
              while ! nc -z board-service 8081; do
                echo "Waiting for board-service..."
                sleep 5
              done
              while ! nc -z encyclo-service 8082; do
                echo "Waiting for encyclo-service..."
                sleep 5
              done
      containers:
        - name: nginx
          image: utopiandrmer/compi-nginx
          ports:
            - containerPort: 80
            - containerPort: 443



--- # api-gateway
apiVersion: apps/v1
kind: Deployment

metadata:
  name: api-gateway-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway-pod

  template:
    metadata:
      labels:
        app: api-gateway-pod

    spec:
      initContainers:
        - name: init-wait-for-discovery
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 discovery-eureka 8761; do echo "Waiting for Discovery..."; sleep 5; done' ]
      containers:
        - name: api-gateway
          image: utopiandrmer/compi-api-gateway
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8000


--- #auth-service
apiVersion: apps/v1
kind: Deployment

metadata:
  name: auth-service-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service-pod

  template:
    metadata:
      labels:
        app: auth-service-pod

    spec:
      initContainers:
        - name: init-wait-for-discovery
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 discovery-eureka 8761; do echo "Waiting for Discovery..."; sleep 5; done' ]
      containers:
        - name: auth-service
          image: utopiandrmer/compi-auth-service
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8080

--- #board-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: board-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: board-service-pod

  template:
    metadata:
      labels:
        app: board-service-pod

    spec:
      initContainers:
        - name: init-wait-for-discovery
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 discovery-eureka 8761; do echo "Waiting for Discovery..."; sleep 5; done' ]
      containers:
        - name: board-service
          image: utopiandrmer/compi-board-service
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8080

--- #encyclo-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: encyclo-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: encyclo-service-pod

  template:
    metadata:
      labels:
        app: encyclo-service-pod

    spec:
      initContainers:
        - name: init-wait-for-discovery
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 discovery-eureka 8761; do echo "Waiting for Discovery..."; sleep 5; done' ]
      containers:
        - name: encyclo-service
          image: utopiandrmer/compi-encyclo-service
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8080

--- #my-plant
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-plant-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-plant-pod
  template:
    metadata:
      labels:
        app: my-plant-pod
    spec:
      initContainers:
        - name: init-wait-for-discovery
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 discovery-eureka 8761; do echo "Waiting for Discovery..."; sleep 5; done' ]
      containers:
        - name: my-plant
          image: utopiandrmer/compi-my-plant
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8080

--- # discovery-eureka
apiVersion: apps/v1
kind: Deployment

metadata:
  name: discovery-eureka-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-eureka-pod
  template:
    metadata:
      labels:
        app: discovery-eureka-pod
    spec:
      initContainers:
        - name: init-wait-for-mysql
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql 3306; do echo "Waiting for MySQL..."; sleep 5; done' ]
        - name: init-wait-for-redis
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 redis 6379; do echo "Waiting for Redis..."; sleep 5; done' ]
        - name: init-wait-for-mongodb
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 mongodb 27017; do echo "Waiting for MongoDB..."; sleep 5; done' ]
        - name: init-wait-for-minio
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 minio 9000; do echo "Waiting for Minio..."; sleep 5; done' ]
        - name: init-wait-for-scraper
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 scraper 8080; do echo "Waiting for Scraper..."; sleep 5; done' ]
      containers:
        - name: discovery-eureka
          image: utopiandrmer/compi-discovery-eureka
          env:
            - name: active_profile
              value: "dev"
            - name: TZ
              value: "Asia/Seoul"
          ports:
            - containerPort: 8761

--- #scraper
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scraper-pod
  template:
    metadata:
      labels:
        app: scraper-pod
    spec:
      containers:
        - name: scraper
          image: utopiandrmer/compi-scraper
          ports:
            - containerPort: 8080

--- #minio
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-pod
      
  template:
    metadata:
      labels:
        app: minio-pod

    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio
          env:
            - name: MINIO_ROOT_USER
              value: "ADMIN"
            - name: MINIO_ROOT_PASSWORD
              value: "compcomp!!"
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: minio-data
              mountPath: /data
          command: ["minio", "server", "/data", "--console-address", ":9001"]
      volumes:
        - name: minio-data
          hostPath:
            path: /root/minio/data


--- #mysql
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-pod
  template:
    metadata:
      labels:
        app: mysql-pod
    spec:
      containers:
        - name: mysql
          image: utopiandrmer/compi-mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "1234"
          ports:
            - containerPort: 3306

--- #mongodb
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-pod
  template:
    metadata:
      labels:
        app: mongodb-pod
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "1234"
          ports:
            - containerPort: 27017

--- #redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-pod
  template:
    metadata:
      labels:
        app: redis-pod
    spec:
      containers:
        - name: redis
          image: redis
          env:
            - name: REDIS_PASSWORD
              value: "1234"
          ports:
            - containerPort: 6379
