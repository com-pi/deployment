worker_processes    1;

events {
    worker_connections  1024;
}

http {
    include                 mime.types;
    default_type            application/octet-stream;

    log_format routing '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'host="$host" request_uri="$request_uri"';

    access_log /var/log/nginx/access.log routing;
    error_log /var/log/nginx/error.log;

    sendfile                on;
    keepalive_timeout       30;

    # HTTP 요청 리다이렉트 설정
    server {
        listen                  80;
        server_name             api.com-p.site;

        # HTTP 요청은 HTTPS 요청으로 리다이렉트 합니다.
        location / {
            return 301 https://api.com-p.site$request_uri;
        }
    }

    server {
        listen                  80;
        server_name             minio.com-p.site;

        sendfile                     on;
        tcp_nopush                   on;
        tcp_nodelay                  on;
        client_max_body_size         10M;

        # minio 요청을 라우팅합니다.
        location / {
            proxy_pass              http://minio:9001;
            proxy_set_header Host   $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }
    }

    # 일반적인 API 요청 라우팅
    server {
        listen                       443 ssl;
        server_name                  api.com-p.site;

        ssl_certificate              /etc/ssl/api/certificate.crt;
        ssl_certificate_key          /etc/ssl/api/private.key;

        ssl_session_cache            shared:SSL:1m;
        ssl_session_timeout          5m;

        ssl_ciphers                  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers    on;

        client_max_body_size         10M;

        # 타임아웃 설정
        proxy_connect_timeout       60s;
        proxy_read_timeout          60s;
        proxy_send_timeout          60s;

        location / {
            proxy_pass              http://api-gateway:8000;
            proxy_set_header Host   $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_connect_timeout   10s;
            proxy_read_timeout      10s;
            proxy_next_upstream     error timeout http_502 http_503 http_504;
        }
    }

    # 이미지 요청
    server {
        listen                       443 ssl;
        server_name                  bucket.com-p.site;

        sendfile                     on;
        tcp_nopush                   on;
        tcp_nodelay                  on;
        client_max_body_size         10M;

        ssl_certificate              /etc/ssl/bucket/certificate.crt;
        ssl_certificate_key          /etc/ssl/bucket/private.key;

        ssl_session_cache            shared:SSL:1m;
        ssl_session_timeout          5m;

        ssl_ciphers                  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers    on;

        location / {
            proxy_pass              http://minio:9000;
            proxy_set_header Host   $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }
    }
}
